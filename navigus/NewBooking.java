package navigus;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;

public class NewBooking extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public NewBooking() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        ChooseDate = new com.toedter.calendar.JDateChooser();
        Slot = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(300, 150));
        setMinimumSize(new java.awt.Dimension(700, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 3, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(" Calendar Slot Booking service");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 701, 80));

        jButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jButton1.setText("Book Slot");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookSlotBtnActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 100, 40));

        jButton2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 100, 40));

        ChooseDate.setDateFormatString("d MMM, yyyy");
        getContentPane().add(ChooseDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 190, 30));

        Slot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9.00-10.00", "10.00-11.00", "11.00-12.00", "12.00-13.00", "13.00-14.00", "14.00-15.00", "15.00-16.00", "16.00-17.00", "17.00-18.00" }));
        Slot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SlotActionPerformed(evt);
            }
        });
        getContentPane().add(Slot, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 190, 30));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("SLOT:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 90, 25));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("DATE:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 90, 25));

        jButton3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 100, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        Details d=new Details();
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void BookSlotBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookSlotBtnActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy", Locale.getDefault());
        String date=sdf.format(ChooseDate.getDate());
        if(!date.isEmpty()){
            try{ 
                MongoClient mongoClient = new MongoClient( "localhost" , 27017 );
                DB db = mongoClient.getDB( "Navigus" );
                DBCollection coll = db.getCollection("BookingDetails");
                String slot=Slot.getSelectedItem().toString();
                BasicDBObject doc1 = new BasicDBObject("Date",date).append("Slot", slot);
                coll.insert(doc1);
                
                DBCollection col2 = db.getCollection("AvailableDetails");
                BasicDBObject view = new BasicDBObject();
                String slot_ = "";
                String date_="";
                view.put("Slot", slot);
                DBCursor cur1 = col2.find(view);// cheeks in collection of specific id
                if (cur1.hasNext()) {
                    DBObject o = cur1.next();
                    slot_ = (String) o.get("Slot");//get slot from mongodb
                    date_ = (String) o.get("Date");//get slot from mongodb
                }
                if (slot.equals(slot_) && date.equals(date_)){// matches here
                    BasicDBObject doc2 = new BasicDBObject("Date",date).append("Slot", slot);
                    col2.remove(doc2);
                }
                else
                {
                    int ind=Slot.getSelectedIndex();
                    for(int i=0;i<9;i++)
                    {
                        if(i!=ind){
                            BasicDBObject doc2 = new BasicDBObject("Date",date).append("Slot", Slot.getItemAt(i));
                            col2.insert(doc2);
                        }
                    }
                }
                JOptionPane.showMessageDialog(this, "Slot Booked!!");
                Details d=new Details();
                d.setVisible(true);
                dispose();
            }
            catch(Exception e){
                System.out.println(e.getClass()+":"+e.getMessage());
            }
        }
    }//GEN-LAST:event_BookSlotBtnActionPerformed

    private void SlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SlotActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy", Locale.getDefault());
        String date=sdf.format(ChooseDate.getDate());
        if(!date.isEmpty()){
            try{ 
                MongoClient mongoClient = new MongoClient( "localhost" , 27017 );
                DB db = mongoClient.getDB( "Navigus" );
                DBCollection coll = db.getCollection("BookingDetails");
                BasicDBObject view = new BasicDBObject();
                String slot = "";
                String d="";
                String s1 = Slot.getSelectedItem().toString();
                view.put("Slot", s1);
                DBCursor cur1 = coll.find(view);// cheeks in collection of specific id
                if (cur1.hasNext()) {
                    DBObject o = cur1.next();
                    slot = (String) o.get("Slot");//get slot from mongodb
                    d = (String) o.get("Date");
                }
                if (s1.equals(slot) && date.equals(d)){// matches here
                    JOptionPane.showMessageDialog(this, "Slot already Booked!!");
                    
                    Details d1=new Details();
                    d1.setVisible(true);
                    dispose();
                }
            }
            catch(Exception e){
                System.out.println(e.getClass()+":"+e.getMessage());
            }
        }
    }//GEN-LAST:event_SlotActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        Home h=new Home();
        h.setVisible(true);
        dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.toedter.calendar.JDateChooser ChooseDate;
    private javax.swing.JComboBox<String> Slot;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
