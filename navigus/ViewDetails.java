package navigus;

import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class ViewDetails extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public ViewDetails() {
        initComponents();
                
        try{ 
                    
                    MongoClient mongoClient = new MongoClient( "localhost" , 27017 );
                    DB db = mongoClient.getDB( "Navigus" );
                    DBCollection col1 = db.getCollection("BookingDetails");
                    DBCursor cursor1=col1.find();
                    DefaultTableModel model1=(DefaultTableModel)BookedSlotsTable.getModel();
                    BookedSlotsTable.setAutoCreateRowSorter(true);
                    model1.setRowCount(0);
                    while(cursor1.hasNext())
                    {
                        DBObject obj1=cursor1.next();
                        String s1=(String)obj1.get("Date");
                        String s2=(String)obj1.get("Slot");
                        
                        model1.addRow(new Object[]{s1,s2});
                    }
                    DBCollection col2 = db.getCollection("AvailableDetails");
                    DBCursor cursor2=col2.find();
                    DefaultTableModel model2=(DefaultTableModel)AvailableSlotsTable.getModel();
                    AvailableSlotsTable.setAutoCreateRowSorter(true);
                    model2.setRowCount(0);
                    while(cursor2.hasNext())
                    {
                        DBObject obj2=cursor2.next();
                        String s3=(String)obj2.get("Date");
                        String s4=(String)obj2.get("Slot");
                        
                        model2.addRow(new Object[]{s3,s4});
                    }
                    BookedSlotsTable.setModel(model1);
                    cursor1.close();
                    AvailableSlotsTable.setModel(model2);
                    cursor2.close();
                    mongoClient.close();
            }
         catch(Exception e)
         {
             BookedSlots.setText(e.getClass().getName() + ": " + e.getMessage());
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AvailableSlotsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        BookedSlotsTable = new javax.swing.JTable();
        AvailableSlots = new javax.swing.JLabel();
        BookedSlots = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(300, 150));
        setMinimumSize(new java.awt.Dimension(700, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 3, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(" Calendar Slot Booking service");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 701, 80));

        AvailableSlotsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Slot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AvailableSlotsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(AvailableSlotsTable);
        if (AvailableSlotsTable.getColumnModel().getColumnCount() > 0) {
            AvailableSlotsTable.getColumnModel().getColumn(0).setResizable(false);
            AvailableSlotsTable.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 220, 170));

        BookedSlotsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Slot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(BookedSlotsTable);
        if (BookedSlotsTable.getColumnModel().getColumnCount() > 0) {
            BookedSlotsTable.getColumnModel().getColumn(0).setResizable(false);
            BookedSlotsTable.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 240, 170));

        AvailableSlots.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        AvailableSlots.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AvailableSlots.setText("Available Slots");
        getContentPane().add(AvailableSlots, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 210, 25));

        BookedSlots.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        BookedSlots.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BookedSlots.setText("Booked Slots");
        getContentPane().add(BookedSlots, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 210, 25));

        jButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkBtnActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 100, 40));

        jButton3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 100, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkBtnActionPerformed
        // TODO add your handling code here:
        Details d=new Details();
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_OkBtnActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        Home h=new Home();
        h.setVisible(true);
        dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AvailableSlots;
    private javax.swing.JTable AvailableSlotsTable;
    private javax.swing.JLabel BookedSlots;
    private javax.swing.JTable BookedSlotsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
